---
stages:
- name: Build server and worker
  inputs:
  - service: ${SAMPLE_REPO}
    type: git
    branch: ibm-devops
    dir_name: null
  properties:
  - name: BLUE_GREEN
    type: text_area
    value: ${DEPLOY_SCRIPT}
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |
      #!/bin/bash
      # your script here
      echo "${BLUE_GREEN}" > blue_green.sh
      chmod a+x blue_green.sh
- name: Deploy server
  inputs:
  - type: job
    stage: Build server and worker
    job: Build
    dir_name: null
  properties:
  - name: ICON_DOMAIN
    type: text
    value: ${ICON_DOMAIN}
  jobs:
  - name: Deploy server
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    script: |-
      #!/bin/bash
      ./blue_green.sh -d ${ICON_DOMAIN} -n ${CF_APP} -f bluemix/base-main-manifest.yml --no-start 
  - name: Deploy worker
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME2}
    script: |-
      #!/bin/bash
      ./blue_green.sh -f bluemix/base-worker-manifest.yml    --no-start  
- name: Configure server
  inputs:
  - type: job
    stage: Build server and worker
    job: Build
    dir_name: null
  properties:
  - name: CRYPTO_PASSWORD
    type: secure
    value: ${CRYPTO_PASSWORD}
  - name: JWT_TOKEN_SECRET_KEY
    type: secure
    value: ${JWT_TOKEN_SECRET_KEY}
  - name: PHIX_ENDPOINT_DICTIONARY
    type: text
    value: ${PHIX_ENDPOINT_DICTIONARY}
  - name: PHIX_ENDPOINT_RETRIEVAL
    type: text
    value: ${PHIX_ENDPOINT_RETRIEVAL}
  - name: PHIX_ENDPOINT_RETRIEVAL_TOKEN
    type: secure
    value: ${PHIX_ENDPOINT_RETRIEVAL_TOKEN}
  - name: PHIX_ENDPOINT_SUBMISSION
    type: text
    value: ${PHIX_ENDPOINT_SUBMISSION}
  - name: PHIX_ENDPOINT_SUBMISSION_TOKEN
    type: secure
    value: ${PHIX_ENDPOINT_SUBMISSION_TOKEN}
  - name: POSTGRES_READONLY_ROLE
    type: text
    value: ${POSTGRES_READONLY_ROLE}
  - name: TZ
    type: text
    value: ${TZ}
  - name: DHIR_NAME
    value: ${DHIR_NAME}
    type: text
  - name: CLAMAV_NAME
    value: ${CLAMAV_NAME}
    type: text
  - name: SERVER_NAME
    value: ${CF_APP_NAME1}
    type: text
  - name: WORKER_NAME
    value: ${CF_APP_NAME2}
    type: text
  - name: ICON_DOMAIN
    type: text
    value: ${ICON_DOMAIN}
  jobs:
  - name: Tests
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    script: "#!/bin/bash\nexport EXT_DIR=$(pwd)\nsudo apt-get -y install apt-transport-https\
      \ ca-certificates &> $EXT_DIR/dockerinst.out\n    sudo apt-key adv --keyserver\
      \ hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\
      \ &>> $EXT_DIR/dockerinst.out\n    sudo add-apt-repository \"deb https://apt.dockerproject.org/repo\
      \ ubuntu-precise main\" &>> $EXT_DIR/dockerinst.out\n    sudo apt-get update\
      \ &>> $EXT_DIR/dockerinst.out\n    sudo apt-get -y install docker-engine &>>\
      \ $EXT_DIR/dockerinst.out\nif [ -f $EXT_DIR/utilities/cfic826.tgz ]; then\n\
      \        tar zxf $EXT_DIR/utilities/cfic826.tgz\n    else\n        wget https://static-ice.ng.bluemix.net/ibm-containers-linux_x64\
      \ &> /dev/null\n    fi\n    chmod 755 $EXT_DIR/ibm-containers-linux_x64\n  \
      \   echo \"Installing IBM Containers plugin (cf ic)\"\n     cf install-plugin\
      \ -f $EXT_DIR/ibm-containers-linux_x64 &> /dev/null\ncf ic init\n# Prepare testing\
      \# GET CLAMAV endpoint\nRIGHT=}}\nLEFT={{\n\
      \CLAMAV_IP=$(cf ic inspect -f $LEFT'.NetworkSettings.PublicIpAddress'$RIGHT $CLAMAV_NAME)\n\
      \# GET DHIR NGINX ENDPOINT \nDHIR_NGINX_ENDPOINT=https://${DHIR_NAME}.${ICON_DOMAIN}\n\
      \# Setting env for server\n\
      \cf set-env $SERVER_NAME CLAMAV_ENDPOINT $CLAMAV_IP\n\
      \cf set-env $SERVER_NAME PHIX_ENDPOINT_DICTIONARY=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_DICTIONARY}\n\
      \cf set-env $SERVER_NAME PHIX_ENDPOINT_RETRIEVAL=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_RETRIEVAL}\n\
      \cf set-env $SERVER_NAME PHIX_ENDPOINT_SUBMISSION=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_SUBMISSION}\n\
      \cf set-env $SERVER_NAME PHIX_ENDPOINT_RETRIEVAL_TOKEN=${PHIX_ENDPOINT_RETRIEVAL_TOKEN}\n\
      \cf set-env $SERVER_NAME PHIX_ENDPOINT_SUBMISSION_TOKEN=${PHIX_ENDPOINT_SUBMISSION_TOKEN}\n\
      \cf set-env $SERVER_NAME POSTGRES_READONLY_ROLE=${POSTGRES_READONLY_ROLE}\n\
      \cf set-env $SERVER_NAME TZ=${TZ}\n\
      \cf set-env $SERVER_NAME SERVER_TYPE=1\n\
      \cf start $SERVER_NAME\n\
      \# Setting env for server worker\n\
      \cf set-env $WORKER_NAME CLAMAV_ENDPOINT $CLAMAV_IP\n\
      \cf set-env $WORKER_NAME PHIX_ENDPOINT_DICTIONARY=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_DICTIONARY}\n\
      \cf set-env $WORKER_NAME PHIX_ENDPOINT_RETRIEVAL=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_RETRIEVAL}\n\
      \cf set-env $WORKER_NAME PHIX_ENDPOINT_SUBMISSION=https://${DHIR_NGINX_ENDPOINT}${PHIX_ENDPOINT_SUBMISSION}\n\
      \cf set-env $WORKER_NAME PHIX_ENDPOINT_RETRIEVAL_TOKEN=${PHIX_ENDPOINT_RETRIEVAL_TOKEN}\n\
      \cf set-env $WORKER_NAME PHIX_ENDPOINT_SUBMISSION_TOKEN=${PHIX_ENDPOINT_SUBMISSION_TOKEN}\n\
      \cf set-env $WORKER_NAME POSTGRES_READONLY_ROLE=${POSTGRES_READONLY_ROLE}\n\
      \cf set-env $WORKER_NAME TZ=${TZ}\n\
      \cf set-env $WORKER_NAME SERVER_TYPE=2\n\
      \cf start $WORKER_NAME\n"
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
